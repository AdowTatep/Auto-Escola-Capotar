/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.atendente;

import dao.veiculoDAO;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import negocio.Veiculo;

/**
 *
 * @author Rodrigo Salles
 */
public class VeiculoView extends javax.swing.JDialog {

    ArrayList<Veiculo> listVeiculos;
    /**
     * Creates new form VeiculoView
     */
    public VeiculoView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jVeicTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPlaca = new javax.swing.JTextField();
        jAno = new javax.swing.JTextField();
        jModelo = new javax.swing.JTextField();
        jRemoveButt = new javax.swing.JButton();
        jModButt = new javax.swing.JButton();
        jAddButt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Veículos:");

        jVeicTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Placa", "Ano", "Modelo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jVeicTable);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Adcionar ou Modificar"));

        jLabel2.setText("Placa:");

        jLabel3.setText("Ano:");

        jLabel4.setText("Modelo:");

        jPlaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPlacaActionPerformed(evt);
            }
        });

        jRemoveButt.setText("Apagar");
        jRemoveButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRemoveButtActionPerformed(evt);
            }
        });

        jModButt.setText("Alterar");
        jModButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jModButtActionPerformed(evt);
            }
        });

        jAddButt.setText("Adicionar");
        jAddButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddButtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jModelo, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(jAno)
                    .addComponent(jPlaca))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jAddButt)
                    .addComponent(jRemoveButt, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jModButt, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(4, 4, 4)
                        .addComponent(jAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jRemoveButt)
                        .addGap(23, 23, 23)
                        .addComponent(jModButt)
                        .addGap(26, 26, 26)
                        .addComponent(jAddButt)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void refreshTable(){
        //Atualiza a tabela
        try {
            //Cria um DAo veículo
            veiculoDAO vecDao = new veiculoDAO();
            
            //Preenche a lista já criada com o retorno de procurar todos
            listVeiculos = vecDao.procurarTodos();
            
            //Pega o model da tabela
            DefaultTableModel tabeMod = (DefaultTableModel) jVeicTable.getModel();
            
            //Limpa a tabela se tiver algo
            while(tabeMod.getRowCount()!=0){
                tabeMod.removeRow(0);
            }
            
            //Para cada veículo em list veículos
            for(Veiculo veicAdd:listVeiculos){
                //Adiciona à tabela
                tabeMod.addRow(new Object[]{veicAdd.getPlaca(), veicAdd.getAno(), veicAdd.getModelo()});
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Erro na conexão!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro no banco!/n"+ex.getMessage());
        }        
    }    
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        refreshTable();
    }//GEN-LAST:event_formWindowOpened

    private void jRemoveButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRemoveButtActionPerformed
        try {
            //Pega o número da posição selecionada da tabela
            int selec = jVeicTable.getSelectedRow();
            
            //Se a posição é diferente de -1
            //é que tem algo selecionado
            //se a posição for -1 é porque não tem nada selecionado
            if(selec != -1){
                //Pega o veículo selecionado da lista e apaga
                Veiculo veicDel = listVeiculos.get(selec);
                new veiculoDAO().apagar(veicDel);
                JOptionPane.showMessageDialog(this, "Veiculo Removido com SUCESSO!");
            } else {
                JOptionPane.showMessageDialog(this, "Escolha uma opção na tabela!");
            }
            
            refreshTable();
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Erro na conexão!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro no banco!/n"+ex.getMessage());
        }
        
    }//GEN-LAST:event_jRemoveButtActionPerformed

    private void jAddButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddButtActionPerformed
        try {
            //Se todos os campos estão diferente de "vazio" ou seja, preenchidos
            if(!jPlaca.getText().equals("") || !jAno.getText().equals("") ||  !jModelo.getText().equals("")){
                //Cria um dao
                veiculoDAO veicDAO = new veiculoDAO();
                //Cria um veículo com as informações preenchidas
                Veiculo veicAdd = new Veiculo(jPlaca.getText(), Integer.parseInt(jAno.getText()), jModelo.getText());
                //Adiciona
                veicDAO.inserir(veicAdd);
                JOptionPane.showMessageDialog(this, "Veiculo Adicionado com SUCESSO!");
                refreshTable();
            } else {
                //Senão os campos não estao preenchidos
                JOptionPane.showMessageDialog(this, "Preencha todos os campos!");
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Erro na conexão!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro no banco!/n"+ex.getMessage());
        }
        
    }//GEN-LAST:event_jAddButtActionPerformed

    private void jPlacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPlacaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPlacaActionPerformed

    private void jModButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jModButtActionPerformed
        try {
            //Se todos os campos estão diferente de "vazio" ou seja, preenchidos
            if(!jPlaca.getText().equals("") || !jAno.getText().equals("") ||  !jModelo.getText().equals("")){
                //Pega o número da posição selecionada da tabela
                int selec = jVeicTable.getSelectedRow();
                
                //Se a posição é diferente de -1
                //é que tem algo selecionado
                //se a posição for -1 é porque não tem nada selecionado
                if(selec != -1){
                    //Cria o dao
                    veiculoDAO veicDAO = new veiculoDAO();
                    
                    //Preenche um veículo com as novas informações
                    Veiculo veicNovo = new Veiculo(jPlaca.getText(), Integer.parseInt(jAno.getText()), jModelo.getText());
                    
                    //Pega o veículo que será alterado que está clicado na tabela
                    Veiculo veicMod = listVeiculos.get(selec);

                    //altera
                    new veiculoDAO().alterar(veicNovo, veicMod);
                    JOptionPane.showMessageDialog(this, "Veiculo Modificado com SUCESSO!");
                    refreshTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Escolha uma opção na tabela!");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Preencha todos os campos!");
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Erro na conexão!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro no banco!/n"+ex.getMessage());
        }
    }//GEN-LAST:event_jModButtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VeiculoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VeiculoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VeiculoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VeiculoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VeiculoView dialog = new VeiculoView(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAddButt;
    private javax.swing.JTextField jAno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton jModButt;
    private javax.swing.JTextField jModelo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jPlaca;
    private javax.swing.JButton jRemoveButt;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jVeicTable;
    // End of variables declaration//GEN-END:variables
}
