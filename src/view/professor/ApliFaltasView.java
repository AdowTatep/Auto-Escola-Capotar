/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.professor;

import aula.Aula;
import dao.alunoAulaDAO;
import dao.aulaDAO;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.table.DefaultTableModel;
import pessoa.Professor;

/**
 *
 * @author adowt
 */
public class ApliFaltasView extends javax.swing.JDialog {
    ArrayList<Aula> aulasProf, alunosAula;
    
    Professor profAtual;
    /**
     * Creates new form ApliFaltasView
     */
    public ApliFaltasView(java.awt.Frame parent, boolean modal, Professor profReceber) {
        super(parent, modal);
        initComponents();
        this.profAtual = profReceber;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jAulasTab = new javax.swing.JTable();
        jAulaSelec = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jAlunosList = new javax.swing.JList();
        jAplicar = new javax.swing.JButton();
        jCancelar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jAlunosTab = new javax.swing.JTable();
        jSelecAula = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Selecione a aula:");

        jAulasTab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tipo", "Hora Inicio", "Hora Fim", "Data"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jAulasTab);

        jLabel2.setText("Selecione os alunos:");

        jScrollPane3.setViewportView(jAlunosList);

        jAplicar.setText("Aplicar faltas aos selecionados");
        jAplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAplicarActionPerformed(evt);
            }
        });

        jCancelar.setText("Cancelar faltas aos selecionados");
        jCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCancelarActionPerformed(evt);
            }
        });

        jAlunosTab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "login", "Faltou"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jAlunosTab);

        javax.swing.GroupLayout jAulaSelecLayout = new javax.swing.GroupLayout(jAulaSelec);
        jAulaSelec.setLayout(jAulaSelecLayout);
        jAulaSelecLayout.setHorizontalGroup(
            jAulaSelecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jAulaSelecLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jAulaSelecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                    .addGroup(jAulaSelecLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jAulaSelecLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jAulaSelecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jAplicar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jAulaSelecLayout.setVerticalGroup(
            jAulaSelecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jAulaSelecLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGroup(jAulaSelecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jAulaSelecLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jAplicar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCancelar))
                    .addGroup(jAulaSelecLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );

        jSelecAula.setText("Selecionar Aula");
        jSelecAula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSelecAulaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jAulaSelec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jSelecAula))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSelecAula)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jAulaSelec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void refreshAulasTable(){
        try {
            aulaDAO daoAula = new aulaDAO();
            
            //Procura as aulas e preenche uma lista com elas
            Aula aulaProc = new Aula(0, "", profAtual, "", "", "", false);
            
            aulasProf = daoAula.procurar(aulaProc);
            
            //Pega o model da tabela
            DefaultTableModel tabAulas = (DefaultTableModel) jAulasTab.getModel();
            
            while(tabAulas.getRowCount()!=0){
                tabAulas.removeRow(0);
            }
            
            //Preenche a tabela com esse model
            for(Aula aulaAdd:aulasProf) {
                tabAulas.addRow(new Object[]{aulaAdd.getId(), aulaAdd.getTipo(), aulaAdd.getHoraInicio(), aulaAdd.getHoraFim(), aulaAdd.getData()});
            }
            
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Erro na conexão!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro no banco!\n"+ex.getMessage());
        }
    }
    
    private void refreshAulasAluno(){
         try {
            int aulaSelec = jAulasTab.getSelectedRow();
            if(aulaSelec > -1){
          
                Aula aulaEscolhida = aulasProf.get(aulaSelec);

                alunosAula = new alunoAulaDAO().procurarTodas(aulaEscolhida);
                
                //Pega o model da tabela
                DefaultTableModel tabAulasAluno = (DefaultTableModel) jAlunosTab.getModel();

                while(tabAulasAluno.getRowCount()!=0){
                    tabAulasAluno.removeRow(0);
                }
                
                DefaultListModel alunosList = new DefaultListModel();
                
                alunosList.removeAllElements();
                
                //Preenche a tabela com esse model
                for(Aula aulaAdd:alunosAula) {
                    String faltText;
                    if(aulaAdd.isFaltou()){
                        faltText = "Sim";
                    } else {
                        faltText = "Não";
                    }
                    
                    tabAulasAluno.addRow(new Object[]{aulaAdd.getLoginAluno(), faltText});
                    alunosList.addElement(aulaAdd.getLoginAluno());
                } 
                
                jAlunosList.setModel(alunosList);
                jAulaSelec.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Selecione uma aula!!");
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Erro na conexão!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro no banco!\n"+ex.getMessage());
        }
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        refreshAulasTable();
        jAulaSelec.setVisible(false);
    }//GEN-LAST:event_formWindowOpened

    private void jSelecAulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSelecAulaActionPerformed
        refreshAulasAluno();
    }//GEN-LAST:event_jSelecAulaActionPerformed

    private void jAplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAplicarActionPerformed
        try {
            int[] selecLinhas = jAlunosList.getSelectedIndices();
        
            ArrayList<Aula> aulasSelec = new ArrayList<>();
            for(int i=0; i<selecLinhas.length; i++){
                aulasSelec.add(alunosAula.get(selecLinhas[i]));
            }

            alunoAulaDAO aluAuDAO = new alunoAulaDAO();

            for(Aula aulaRemov:aulasSelec){
                aulaRemov.setFaltou(true);
                aluAuDAO.alterar(aulaRemov);
            }
            refreshAulasTable();
            jAulaSelec.setVisible(false);
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Erro na conexão!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro no banco!\n"+ex.getMessage());
        }
    }//GEN-LAST:event_jAplicarActionPerformed

    private void jCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCancelarActionPerformed
        try {
            int[] selecLinhas = jAlunosTab.getSelectedRows();
        
            ArrayList<Aula> aulasSelec = new ArrayList<>();
            for(int i=0; i<selecLinhas.length; i++){
                aulasSelec.add(alunosAula.get(selecLinhas[i]));
            }

            alunoAulaDAO aluAuDAO = new alunoAulaDAO();

            for(Aula aulaRemov:aulasSelec){
                aulaRemov.setFaltou(false);
                aluAuDAO.alterar(aulaRemov);
            }
            refreshAulasTable();
            jAulaSelec.setVisible(false);
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Erro na conexão!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro no banco!\n"+ex.getMessage());
        }
    }//GEN-LAST:event_jCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ApliFaltasView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ApliFaltasView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ApliFaltasView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ApliFaltasView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ApliFaltasView dialog = new ApliFaltasView(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList jAlunosList;
    private javax.swing.JTable jAlunosTab;
    private javax.swing.JButton jAplicar;
    private javax.swing.JPanel jAulaSelec;
    private javax.swing.JTable jAulasTab;
    private javax.swing.JButton jCancelar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton jSelecAula;
    // End of variables declaration//GEN-END:variables
}
